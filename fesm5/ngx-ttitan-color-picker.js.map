{"version":3,"file":"ngx-ttitan-color-picker.js.map","sources":["ng://ngx-ttitan-color-picker/lib/ngx-ttitan-color-picker.service.ts","ng://ngx-ttitan-color-picker/lib/ngx-ttitan-color-picker-dragger.directive.ts","ng://ngx-ttitan-color-picker/lib/ngx-ttitan-color-picker-selector.directive.ts","ng://ngx-ttitan-color-picker/lib/ngx-ttitan-color-picker-input.directive.ts","ng://ngx-ttitan-color-picker/lib/ngx-ttitan-color-picker-palette-list/ngx-ttitan-color-picker-palette-list.component.ts","ng://ngx-ttitan-color-picker/lib/ngx-ttitan-color-picker.component.ts","ng://ngx-ttitan-color-picker/lib/ngx-ttitan-color-picker.module.ts"],"sourcesContent":["import {EventEmitter, Injectable} from '@angular/core';\nimport {CustomPercent} from \"./ngx-ttitan-color-picker-selector.directive\";\nimport {NgxTTitanColorPickerComponent} from \"./ngx-ttitan-color-picker.component\";\nimport {fromEvent, Observable} from \"rxjs/index\";\nimport {window} from \"rxjs/internal/operators\";\n\nexport interface HSVA {\n  hue: number,\n  saturation: number,\n  value: number,\n  alpha: number,\n}\n\nexport interface Palette {\n  name: string,\n  id: string,\n  colors: Array<string>\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxTTitanColorPickerService {\n\n  public debug: boolean = false;\n  public pickerList: Array<string> = [];\n  public pallets: Array<Palette> = [];\n\n  public mouseMoveObservable: Observable<MouseEvent> = <Observable<MouseEvent>>fromEvent(document, 'mousemove');\n  public mouseUpObservable: Observable<MouseEvent> = <Observable<MouseEvent>>fromEvent(document, 'mouseup');\n  // public mouseMoveObservable: EventEmitter<MouseEvent> = new EventEmitter();\n  // public mouseUpObservable: EventEmitter<MouseEvent> = new EventEmitter();\n\n  constructor() {\n    this.fillBasePallets();\n    //\n    // document.addEventListener('mousemove', ($event) => {\n    //   this.mouseMoveObservable.emit(<MouseEvent>$event);\n    // });\n    // document.addEventListener('mouseup', ($event) => {\n    //   this.mouseUpObservable.emit(<MouseEvent>$event);\n    // });\n\n  }\n\n  saturationChange(percent: CustomPercent, pickerComponent: NgxTTitanColorPickerComponent ) {\n    pickerComponent.hsva.saturation = percent.x;\n    pickerComponent.hsva.value = (100 - percent.y);\n    this.dataToColor(pickerComponent);\n  }\n\n  hueChange(percent: CustomPercent, pickerComponent: NgxTTitanColorPickerComponent) {\n    pickerComponent.hsva.hue = Math.round(360 * percent.y / 100);\n    this.dataToColor(pickerComponent);\n  }\n\n  alphaChange(percent: CustomPercent, pickerComponent: NgxTTitanColorPickerComponent) {\n    pickerComponent.hsva.alpha = (100 - percent.y) / 100;\n    this.dataToColor(pickerComponent);\n  }\n\n  dataToColor(pickerComponent: NgxTTitanColorPickerComponent) {\n    let rgbaArr: Array<number> = this.hsvaToRgba(\n      pickerComponent.hsva.hue,\n      pickerComponent.hsva.saturation,\n      pickerComponent.hsva.value,\n      pickerComponent.hsva.alpha\n    );\n    let rgbaMaxArr: Array<number> = this.hsvaToRgba(\n      pickerComponent.hsva.hue,\n      100,\n      100,\n      pickerComponent.hsva.alpha\n    );\n\n    pickerComponent.currentColor = 'rgb(' + rgbaArr[0] + ',' + rgbaArr[1] + ',' + rgbaArr[2] + ')';\n    pickerComponent.currentColorMax = 'rgba(' + rgbaMaxArr[0] + ',' + rgbaMaxArr[1] + ',' + rgbaMaxArr[2] + ',' + rgbaMaxArr[3] + ')';\n    pickerComponent.currentColorAlpha = 'rgba(' + rgbaArr[0] + ',' + rgbaArr[1] + ',' + rgbaArr[2] + ',' + rgbaArr[3] + ')';\n    pickerComponent.currentColorAlphaZero = 'rgba(' + rgbaArr[0] + ',' + rgbaArr[1] + ',' + rgbaArr[2] + ',0)';\n\n    pickerComponent.setInputValue();\n    pickerComponent.updateReturnColor();\n\n\n  }\n\n  colorToData(color: string, pickerComponent: NgxTTitanColorPickerComponent) {\n    switch (this.detectColorType(color)) {\n      case \"rgba\": this.parseRgbaColor(color, pickerComponent); break;\n      case \"rgb\": this.parseRgbColor(color, pickerComponent); break;\n      case \"hsla\": this.parseHslaColor(color, pickerComponent); break;\n      case \"hsl\": this.parseHslColor(color, pickerComponent); break;\n      case \"hex6\": this.parseHexColor(color, pickerComponent); break;\n      case \"hex8\": this.parseHexColor(color, pickerComponent); break;\n    }\n    this.dataToColor(pickerComponent);\n  }\n\n  getPickerUuid() {\n    let pickerId = '';\n    for(let i = 0; i < 1000; i++) {\n      pickerId = 'picker-' + this.pickerList.length + '-' + i;\n      if(this.pickerList.indexOf(pickerId) === -1 ) {\n        this.pickerList.push(pickerId);\n        return pickerId;\n      }\n    }\n\n  }\n\n\n  detectColorType(color: string): string {\n    if(color.indexOf('rgba') !== -1) {\n      return 'rgba';\n    } else if(color.indexOf('rgb') !== -1) {\n      return 'rgb';\n    } else if(color.indexOf('hsla') !== -1) {\n      return 'hsla';\n    } else if(color.indexOf('hsl') !== -1) {\n      return 'hsl';\n    } else if (color.indexOf('#') !== -1 && (color.length == 4 || color.length == 7)){\n      return 'hex6';\n    } else if (color.indexOf('#') !== -1 && color.length == 9){\n      return 'hex8';\n    } else {\n      return 'undefined';\n    }\n  }\n\n\n  fillValuesFromHsvaArr(hsvaArr: Array<number>, pickerComponent: NgxTTitanColorPickerComponent) {\n    pickerComponent.hsva.hue = hsvaArr[0];\n    pickerComponent.hsva.saturation = hsvaArr[1];\n    pickerComponent.hsva.value = hsvaArr[2];\n    pickerComponent.hsva.alpha = hsvaArr[3];\n  }\n\n\n  parseRgbaColor(color, pickerComponent: NgxTTitanColorPickerComponent) {\n    let aus = color.replace('rgba(', '').replace(')', '');\n    let aus2 = aus.split(',');\n    if(aus2.length == 4) {\n      this.fillValuesFromHsvaArr(\n        this.rgbaToHsva(\n          parseInt(aus2[0]),\n          parseInt(aus2[1]),\n          parseInt(aus2[2]),\n          parseInt(aus2[3]),\n        ),\n        pickerComponent\n      );\n    }\n  }\n\n  parseRgbColor(color, pickerComponent: NgxTTitanColorPickerComponent) {\n    let aus = color.replace('rgb(', '').replace(')', '');\n    let aus2 = aus.split(',');\n    if(aus2.length == 3) {\n      this.fillValuesFromHsvaArr(\n        this.rgbaToHsva(\n          parseInt(aus2[0]),\n          parseInt(aus2[1]),\n          parseInt(aus2[2]),\n          1\n        ),\n        pickerComponent\n      );\n    }\n  }\n\n  parseHslaColor(color, pickerComponent: NgxTTitanColorPickerComponent) {\n    let aus = color.replace('hsla(', '').replace(')', '').replace('%', '');\n    let aus2 = aus.split(',');\n    if(aus2.length == 4) {\n      this.fillValuesFromHsvaArr(\n        this.hslaToHsva(\n          parseInt(aus2[0]),\n          parseInt(aus2[1]),\n          parseInt(aus2[2]),\n          parseInt(aus2[3]),\n        ),\n        pickerComponent\n      );\n    }\n  }\n\n  parseHslColor(color, pickerComponent: NgxTTitanColorPickerComponent) {\n    let aus = color.replace('hsl(', '').replace(')', '').replace('%', '');\n    let aus2 = aus.split(',');\n    if(aus2.length == 3) {\n      this.fillValuesFromHsvaArr(\n        this.hslaToHsva(\n          parseInt(aus2[0]),\n          parseInt(aus2[1]),\n          parseInt(aus2[2]),\n          1\n        ),\n        pickerComponent\n      );\n    }\n  }\n\n  parseHexColor(color, pickerComponent: NgxTTitanColorPickerComponent) {\n    let aus = color.replace('#', '');\n    this.fillValuesFromHsvaArr(\n      this.hexToHsva(aus),\n      pickerComponent\n    );\n  }\n\n\n\n  hsvaToRgba(H, S, V, A): Array<number> {\n    let f , p, q , t, lH, R, G, B;\n\n    H = (H < 360) ? H : 359;\n    S = S / 100;\n    V = V / 100;\n\n    lH = Math.floor(H / 60);\n\n    f = H/60 - lH;\n\n    p = V * (1 - S);\n\n    q = V *(1 - S*f);\n\n    t = V* (1 - (1-f)* S);\n\n    switch (lH){\n      case 0: R = V; G = t; B = p; break;\n      case 1: R = q; G = V; B = p; break;\n      case 2: R = p; G = V; B = t; break;\n      case 3: R = p; G = q; B = V; break;\n      case 4: R = t; G = p; B = V; break;\n      case 5: R = V; G = p; B = q; break;\n    }\n\n    return [Math.round(R*255), Math.round(G*255), Math.round(B*255), A];\n  }\n\n  hsvaToRgbaString(H, S, V, A, showAlpha: boolean = false): string {\n    let colorArr: Array<number> = this.hsvaToRgba(H, S, V, A);\n\n    if(showAlpha) {\n      return 'rgba(' + colorArr.join(',') + ')';\n    }\n\n    colorArr.pop();\n    return 'rgb(' + colorArr.join(',') + ')';\n\n  }\n\n  rgbaToHsva(r, g, b, a): Array<number> {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h, s, v = max;\n    let d = max - min;\n    s = max == 0 ? 0 : d / max;\n\n    if (max == min) {\n      h = 0;\n    } else {\n      switch (max) {\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n      }\n\n      h /= 6;\n    }\n\n\n    return [\n      h * 360,\n      s * 100,\n      v * 100,\n      a\n    ];\n  }\n\n  hsvaToHsla(h, s, v, a): Array<number>{\n    s /= 100;\n    v /= 100;\n    return[\n      Math.round(h),\n      Math.round((s*v/((h=(2-s)*v)<1?h:2-h)) * 100),\n      Math.round((h/2) * 100),\n      a\n    ]\n  }\n\n  hslaToHsva (h, s, l, a): Array<number>{\n    s /= 100;\n    l /= 100;\n    s*=l<.5?l:1-l;\n    return[\n      h,\n      Math.round((2*s/(l+s)) * 100),\n      Math.round((l+s) * 100),\n      a\n    ]\n  }\n\n  hexToHsva(hex: string): Array<number> {\n\n    let rgba = [0,0,0,1];\n    if (hex.length == 6) {\n      rgba = [\n        parseInt(hex.substring(0, 2), 16),\n        parseInt(hex.substring(2, 4), 16),\n        parseInt(hex.substring(4, 6), 16),\n        1\n      ];\n    } else if (hex.length == 3) {\n      rgba = [\n        parseInt(hex.substring(0, 1) + hex.substring(0, 1), 16),\n        parseInt(hex.substring(1, 2) + hex.substring(1, 2), 16),\n        parseInt(hex.substring(2, 3) + hex.substring(2, 3), 16),\n        1\n      ]\n    } else if (hex.length == 8) {\n      rgba = [\n        parseInt(hex.substring(0, 2), 16),\n        parseInt(hex.substring(2, 4), 16),\n        parseInt(hex.substring(4, 6), 16),\n        parseFloat((parseInt(hex.substring(6, 8), 16) / 255).toFixed(2))\n      ]\n    }\n    return this.rgbaToHsva(rgba[0], rgba[1], rgba[2], rgba[3]);\n\n  }\n\n  hsvaToHex(H, S, V, A, showAlpha: boolean = true): string {\n    let rgba: Array<number> = this.hsvaToRgba(H, S, V, A);\n\n    let hA: string = ((showAlpha) ? (rgba[3] * 255).toString(16).substring(0,2) : '');\n\n    if(showAlpha) {\n      hA = (hA.length == 1) ? hA + hA : hA;\n    }\n    return '#' +\n      ((rgba[2] | rgba[1] << 8 | rgba[0] << 16) | 1 << 24).toString(16).slice(1) +\n      hA;\n  }\n\n\n  validateColorFormat(value: string, format: string): string {\n    switch (format) {\n      case \"hex6\": return this.validateHexFormat(value);\n      case \"hex8\": return this.validateHexFormat(value, true);\n      case \"rgb\": return this.validateRgbaFormat(value);\n      case \"rgba\": return this.validateRgbaFormat(value, true);\n      // case \"hsl\": return this.validateHexFormat(value);\n      // case \"hsla\": return this.validateHexFormat(value);\n    }\n    return 'notValid';\n  }\n\n  validateHexFormat(value: string, alpha: boolean = false): string {\n    let result = 'notValid';\n    value = value.replace('#', '');\n    if(!alpha) {\n      if(value.length === 6) {\n        if(!isNaN(parseInt(value, 16))) {\n          return '#' + value;\n        }\n      }\n    } else {\n      if(value.length === 8) {\n        if(!isNaN(parseInt(value, 16))) {\n          return '#' + value;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  validateRgbaFormat(value: string, alpha: boolean = false): string {\n    let result = 'notValid';\n    value = value.replace(/[^0-9\\,]+/g, \"\");\n    let ausArr: Array<string | number> = value.split(',');\n    let alphaVal: string | number = '';\n\n    if(!alpha) {\n      if(ausArr.length == 3) {\n        ausArr = ausArr.map(function(val: string){return parseInt(val)});\n        if(\n          Math.max.apply(null, ausArr) <= 255 &&\n          Math.min.apply(null, ausArr) >= 0\n        ) {\n          return 'rgb(' + ausArr.join(',') + ')';\n        }\n      }\n    } else {\n      if(ausArr.length == 4) {\n        alphaVal = parseFloat(<string>ausArr.pop());\n        ausArr = ausArr.map(function(val: string){return parseInt(val)});\n        if(\n          Math.max.apply(null, ausArr) <= 255 &&\n          Math.min.apply(null, ausArr) >= 0 &&\n          alphaVal >= 0 && alphaVal <= 1\n        ) {\n          ausArr.push(alphaVal);\n          return 'rgba(' + ausArr.join(',') + ')';\n        }\n      }\n    }\n\n    return result;\n  }\n\n  prepareReturnColor(hsva: HSVA, format: string): string {\n    switch (format) {\n      case \"hex6\": return this.hsvaToHex(hsva.hue, hsva.saturation, hsva.value, 1, false);\n      case \"hex8\": return this.hsvaToHex(hsva.hue, hsva.saturation, hsva.value, hsva.alpha, true);\n      case \"rgb\": return this.hsvaToRgbaString(hsva.hue, hsva.saturation, hsva.value, 1);\n      case \"rgba\": return this.hsvaToRgbaString(hsva.hue, hsva.saturation, hsva.value, hsva.alpha, true);\n    }\n    return this.hsvaToHex(hsva.hue, hsva.saturation, hsva.value, 1, false);\n  }\n\n  preparePickerPallets(availPallets: Array<string> = [], customPallets: Array<Palette> = [], pickerComponent: NgxTTitanColorPickerComponent) {\n    this.pallets.forEach((palette) => {\n      if(availPallets.indexOf(palette.id) !== -1) {\n        pickerComponent.pickerPallets.push(palette);\n      }\n    });\n    customPallets.forEach((palette) => {\n      pickerComponent.pickerPallets.push(palette);\n    })\n\n  }\n\n  fillBasePallets() {\n    this.pallets.push({\n      id: 'polaris',\n      name: 'Polaris',\n      colors: [\n        '#F9FAFB', '#F4F6F8', '#DFE3E8', '#C4CDD5',\n        '#919EAB', '#637381', '#454F5B', '#212B36',\n        '#B3B5CB', '#43467F', '#1C2260', '#00044C',\n        '#F6F0FD', '#E3D0FF', '#9C6ADE', '#50248F', '#230051',\n        '#F4F5FA', '#B3BCF5', '#5C6AC4', '#202E78', '#000639',\n        '#EBF5FA', '#B4E1FA', '#007ACE', '#084E8A', '#001429',\n        '#E0F5F5', '#B7ECEC', '#47C1BF', '#00848E', '#003135',\n        '#E3F1DF', '#BBE5B3', '#50B83C', '#108043', '#173630',\n        '#FCF1CD', '#FFEA8A', '#EEC200', '#9C6F19', '#573B00',\n        '#FCEBDB', '#FFC58B', '#F49342', '#C05717', '#4A1504',\n        '#FBEAE5', '#FEAD9A', '#DE3618', '#BF0711', '#330101',\n      ]\n    });\n    this.pallets.push({\n      id: 'material',\n      name: 'Material',\n      colors: [\n        '#ffebee', '#ffcdd2', '#ef9a9a', '#e57373', '#ef5350', '#f44336', '#e53935', '#d32f2f', '#c62828', '#b71c1c', '#ff8a80', '#ff5252', '#ff1744', '#d50000',\n        '#fce4ec', '#f8bbd0', '#f48fb1', '#f06292', '#ec407a', '#e91e63', '#d81b60', '#c2185b', '#ad1457', '#880e4f', '#ff80ab', '#ff4081', '#f50057', '#c51162',\n        '#f3e5f5', '#e1bee7', '#ce93d8', '#ba68c8', '#ab47bc', '#9c27b0', '#8e24aa', '#7b1fa2', '#6a1b9a', '#4a148c', '#ea80fc', '#e040fb', '#d500f9', '#aa00ff',\n        '#ede7f6', '#d1c4e9', '#b39ddb', '#9575cd', '#7e57c2', '#673ab7', '#5e35b1', '#512da8', '#4527a0', '#311b92', '#b388ff', '#7c4dff', '#651fff', '#6200ea',\n        '#e8eaf6', '#c5cae9', '#9fa8da', '#7986cb', '#5c6bc0', '#3f51b5', '#3949ab', '#303f9f', '#283593', '#1a237e', '#8c9eff', '#536dfe', '#3d5afe', '#304ffe',\n        '#e3f2fd', '#bbdefb', '#90caf9', '#64b5f6', '#42a5f5', '#2196f3', '#1e88e5', '#1976d2', '#1565c0', '#0d47a1', '#82b1ff', '#448aff', '#2979ff', '#2962ff',\n        '#e1f5fe', '#b3e5fc', '#81d4fa', '#4fc3f7', '#29b6f6', '#03a9f4', '#039be5', '#0288d1', '#0277bd', '#01579b', '#80d8ff', '#40c4ff', '#00b0ff', '#0091ea',\n        '#e0f7fa', '#b2ebf2', '#80deea', '#4dd0e1', '#26c6da', '#00bcd4', '#00acc1', '#0097a7', '#00838f', '#006064', '#84ffff', '#18ffff', '#00e5ff', '#00b8d4',\n        '#e0f2f1', '#b2dfdb', '#80cbc4', '#4db6ac', '#26a69a', '#009688', '#00897b', '#00796b', '#00695c', '#004d40', '#a7ffeb', '#64ffda', '#1de9b6', '#00bfa5',\n        '#e8f5e9', '#c8e6c9', '#a5d6a7', '#81c784', '#66bb6a', '#4caf50', '#43a047', '#388e3c', '#2e7d32', '#1b5e20', '#b9f6ca', '#69f0ae', '#00e676', '#00c853',\n        '#f1f8e9', '#dcedc8', '#c5e1a5', '#aed581', '#9ccc65', '#8bc34a', '#7cb342', '#689f38', '#558b2f', '#33691e', '#ccff90', '#b2ff59', '#76ff03', '#64dd17',\n        '#f9fbe7', '#f0f4c3', '#e6ee9c', '#dce775', '#d4e157', '#cddc39', '#c0ca33', '#afb42b', '#9e9d24', '#827717', '#f4ff81', '#eeff41', '#c6ff00', '#aeea00',\n        '#fffde7', '#fff9c4', '#fff59d', '#fff176', '#ffee58', '#ffeb3b', '#fdd835', '#fbc02d', '#f9a825', '#f57f17', '#ffff8d', '#ffff00', '#ffea00', '#ffd600',\n        '#fff8e1', '#ffecb3', '#ffe082', '#ffd54f', '#ffca28', '#ffc107', '#ffb300', '#ffa000', '#ff8f00', '#ff6f00', '#ffe57f', '#ffd740', '#ffc400', '#ffab00',\n        '#fff3e0', '#ffe0b2', '#ffcc80', '#ffb74d', '#ffa726', '#ff9800', '#fb8c00', '#f57c00', '#ef6c00', '#e65100', '#ffd180', '#ffab40', '#ff9100', '#ff6d00',\n        '#fbe9e7', '#ffccbc', '#ffab91', '#ff8a65', '#ff7043', '#ff5722', '#f4511e', '#e64a19', '#d84315', '#bf360c', '#ff9e80', '#ff6e40', '#ff3d00', '#dd2c00',\n        '#efebe9', '#d7ccc8', '#bcaaa4', '#a1887f', '#8d6e63', '#795548', '#6d4c41', '#5d4037', '#4e342e', '#3e2723',\n        '#fafafa', '#f5f5f5', '#eeeeee', '#e0e0e0', '#bdbdbd', '#9e9e9e', '#757575', '#616161', '#424242', '#212121',\n        '#eceff1', '#cfd8dc', '#b0bec5', '#90a4ae', '#78909c', '#607d8b', '#546e7a', '#455a64', '#37474f', '#263238',\n      ]\n    });\n  }\n\n\n\n\n\n}\n","import {Directive, ElementRef, HostBinding, Input} from '@angular/core';\n\n@Directive({\n  selector: '[libNgxTTitanColorPickerDragger]'\n})\nexport class NgxTTitanColorPickerDraggerDirective {\n\n  @Input('pickerPad') public pickerPad: number = 0;\n\n  constructor(public elRef: ElementRef) { }\n\n\n  public setPosition(x: number, y: number, direction: string): void {\n\n    let rect = this.elRef.nativeElement.getBoundingClientRect();\n\n    if(direction == 'vertical' || direction == 'both') {\n      this.elRef.nativeElement.style.top = Math.round((y - ((rect.height) / 2))) + 'px';\n    }\n    if(direction == 'horizontal' || direction == 'both') {\n      this.elRef.nativeElement.style.left = Math.round((x - ((rect.width) / 2))) + 'px';\n    }\n\n  }\n\n}\n","import {\n  ContentChild, Directive, ElementRef, EventEmitter, HostListener, Input, OnDestroy, Output\n} from '@angular/core';\nimport {NgxTTitanColorPickerDraggerDirective} from \"./ngx-ttitan-color-picker-dragger.directive\";\n// import {Observable, Subscription, of} from \"rxjs\";\nimport {fromEvent, Subscription} from 'rxjs';\nimport {NgxTTitanColorPickerService} from \"./ngx-ttitan-color-picker.service\";\n\nexport interface CustomRect {\n  height: number,\n  left: number,\n  top: number,\n  width: number\n}\n\nexport interface CustomPercent {\n  x: number,\n  y: number,\n}\n\n\n@Directive({\n  selector: '[libNgxTTitanColorPickerSelector]',\n  exportAs: 'libNgxTTitanColorPickerSelector'\n})\nexport class NgxTTitanColorPickerSelectorDirective implements OnDestroy{\n\n  @Input('direction') public direction: string = 'both';\n\n  @ContentChild(NgxTTitanColorPickerDraggerDirective) public dragger: NgxTTitanColorPickerDraggerDirective = null;\n\n  @Output('change') public change: EventEmitter<CustomPercent> = new EventEmitter<CustomPercent>();\n\n  public el: HTMLElement = null;\n  public dragStart: boolean = false;\n  public globalMouseMove: Subscription = null;\n  public globalMouseUp: Subscription = null;\n\n\n  @HostListener('mousedown', ['$event']) public onMouseDown($event) {\n    this.dragStart = true;\n    this.getPosition($event);\n  }\n\n\n\n  constructor(\n    public elRef: ElementRef,\n    public colorPickerService: NgxTTitanColorPickerService\n  ) {\n    this.el = this.elRef.nativeElement;\n    this.direction = (['both', 'vertical', 'horizontal'].indexOf(this.direction) === -1) ? 'both' : this.direction;\n    // this.globalMouseMove = fromEvent(window, 'mousemove').subscribe((event) => {\n    //   if(this.dragStart) {\n    //     this.getPosition(<MouseEvent>event);\n    //   }\n    // });\n    // this.globalMouseUp = fromEvent(window, 'mouseup').subscribe((event) => {\n    //   if(this.dragStart) {\n    //     this.dragStart = false;\n    //     this.getPosition(<MouseEvent>event);\n    //   }\n    // });\n\n    this.globalMouseMove = this.colorPickerService.mouseMoveObservable.subscribe((event) => {\n      if(this.dragStart) {\n        this.getPosition(<MouseEvent>event);\n      }\n    });\n    this.globalMouseUp = this.colorPickerService.mouseUpObservable.subscribe((event) => {\n      if(this.dragStart) {\n        this.dragStart = false;\n        this.getPosition(<MouseEvent>event);\n      }\n    });\n\n  }\n\n  ngOnDestroy() {\n    if(this.globalMouseMove !== null) {\n      this.globalMouseMove.unsubscribe();\n    }\n    if(this.globalMouseUp !== null) {\n      this.globalMouseUp.unsubscribe();\n    }\n  }\n\n  public setDragger(persent: CustomPercent) {\n    if(this.dragger === null) {\n      return;\n    }\n    let position: CustomRect = this.getRect(this.el);\n    let x = Math.round(((position.width - this.dragger.pickerPad * 2) * persent.x / 100));\n    let y = Math.round(((position.height - this.dragger.pickerPad * 2) * persent.y / 100));\n    this.dragger.setPosition(\n      (x > this.dragger.pickerPad) ? x : this.dragger.pickerPad,\n      (y > this.dragger.pickerPad) ? y : this.dragger.pickerPad,\n      this.direction\n    );\n\n  }\n\n  public getPosition($event: MouseEvent) {\n    let cursorY = $event.pageY;\n    let cursorX = $event.pageX;\n    let position: CustomRect = this.getRect(this.el);\n    let percent: CustomPercent = {x: 0, y: 0};\n    if(this.direction == 'vertical' || this.direction == 'both') {\n      percent.y = Math.round((cursorY - (position.top)) * 100 / (position.height - this.dragger.pickerPad * 2));\n      if(percent.y < 0) {\n        percent.y = 0\n      } else if(percent.y > 100) {\n        percent.y = 100;\n      }\n    }\n    if(this.direction == 'horizontal' || this.direction == 'both') {\n      percent.x = Math.round((cursorX - (position.left)) * 100 / (position.width - this.dragger.pickerPad * 2));\n      if(percent.x < 0) {\n        percent.x = 0\n      } else if(percent.x > 100) {\n        percent.x = 100;\n      }\n    }\n\n    this.setDragger(percent);\n    this.change.emit(percent);\n\n  }\n\n\n\n  public getRect(elem: HTMLElement): CustomRect {\n\n    let box = elem.getBoundingClientRect();\n    let body = document.body;\n    let docEl = document.documentElement;\n    let scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;\n    let scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;\n    let clientTop = docEl.clientTop || body.clientTop || 0;\n    let clientLeft = docEl.clientLeft || body.clientLeft || 0;\n\n    return {\n      height: box.height,\n      left: box.left + scrollLeft - clientLeft,\n      top: box.top + scrollTop - clientTop,\n      width: box.width,\n    };\n  }\n\n\n\n}\n","import {\n  Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, OnChanges, Output,\n  SimpleChanges\n} from '@angular/core';\nimport {NgxTTitanColorPickerService} from \"./ngx-ttitan-color-picker.service\";\n\n@Directive({\n  selector: '[libNgxTTitanColorPickerInput]',\n  exportAs: 'libNgxTTitanColorPickerInput'\n})\nexport class NgxTTitanColorPickerInputDirective {\n\n  @Input('format') format: string = 'hex6';\n  @Output('inputChange') public inputChange: EventEmitter<string> = new EventEmitter<string>();\n\n\n  @HostListener('keyup') keyUp() {\n    this.inputValidate();\n  }\n  @HostListener('change') change() {\n    this.inputValidate();\n  }\n\n\n  constructor(\n    public el: ElementRef,\n    public colorPickerService: NgxTTitanColorPickerService\n  ) { }\n\n\n  setInputValue(value: string) {\n    (<HTMLInputElement>this.el.nativeElement).value = value;\n  }\n\n\n  inputValidate() {\n    let res = this.colorPickerService.validateColorFormat(\n      this.el.nativeElement.value,\n      this.format\n    );\n\n    if(res !== 'notValid') {\n      (<HTMLInputElement>this.el.nativeElement).value = res;\n      this.inputChange.emit(res);\n    }\n\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Palette} from \"../ngx-ttitan-color-picker.service\";\n\n@Component({\n  selector: 'lib-ngx-ttitan-color-picker-palette-list',\n  template: `<div class=\"picker-palette-wrapper\" *ngIf=\"pallets.length > 0\">\n  <div class=\"palette-links\">\n    <div\n      class=\"palette-link\"\n      *ngFor=\"let palette of pallets\"\n      [ngClass]=\"{'selected': (activePalette !== null && activePalette.id == palette.id)}\"\n      (click)=\"selectPalette(palette)\"\n    >\n      {{palette.name}}\n    </div>\n  </div>\n  <div class=\"palette-picker-holder\" *ngIf=\"activePalette !== null && activePalette.colors.length > 0\">\n    <div\n      class=\"palette-color\"\n      *ngFor=\"let color of activePalette.colors\"\n      [ngStyle]=\"{\n        backgroundColor: color\n      }\"\n      (click)=\"colorSelected(color)\"\n    >\n\n    </div>\n  </div>\n</div>\n`,\n  styles: [`:host .picker-palette-wrapper .palette-links{display:flex;flex-wrap:wrap;margin-bottom:5px}:host .picker-palette-wrapper .palette-links .palette-link{margin-right:5px;border-radius:3px;padding:2px 4px;border:1px solid #ddd;text-transform:uppercase;font-size:10px;font-family:-apple-system,BlinkMacSystemFont,San Francisco,Roboto,Segoe UI,Helvetica Neue,sans-serif;font-weight:600;background-color:#fff;cursor:pointer}:host .picker-palette-wrapper .palette-links .palette-link.selected{background-color:#5e6bc5;color:#fff}:host .picker-palette-wrapper .palette-picker-holder{height:165px;display:flex;flex-wrap:wrap;align-items:flex-start;justify-content:flex-start;align-content:baseline}:host .picker-palette-wrapper .palette-picker-holder .palette-color{cursor:pointer;width:10px;height:10px}`]\n})\nexport class NgxTTitanColorPickerPaletteListComponent implements OnInit {\n\n  @Input('pallets') public pallets: Array<Palette> = [];\n  @Output('change') public change: EventEmitter<string> = new EventEmitter<string>();\n\n  public activePalette: Palette = null;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  closePalette() {\n    this.activePalette = null;\n  }\n\n  selectPalette(palette: Palette) {\n    if(\n      this.activePalette == null\n    ) {\n      this.activePalette = palette;\n    } else if (this.activePalette.id !== palette.id) {\n      this.activePalette = palette;\n    }\n\n  }\n\n  colorSelected(color) {\n    this.change.emit(color);\n  }\n\n}\n","import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, ElementRef,\n  EventEmitter,\n  HostListener, Input, OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport {NgxTTitanColorPickerSelectorDirective} from \"./ngx-ttitan-color-picker-selector.directive\";\nimport {HSVA, NgxTTitanColorPickerService, Palette} from \"./ngx-ttitan-color-picker.service\";\nimport {NgxTTitanColorPickerInputDirective} from \"./ngx-ttitan-color-picker-input.directive\";\nimport {NgxTTitanColorPickerPaletteListComponent} from \"./ngx-ttitan-color-picker-palette-list/ngx-ttitan-color-picker-palette-list.component\";\n//[ngStyle]=\"{background: 'linear-gradient(to top, ' + ngxTTitanColorPickerService.currentColor + ' 18px, rgb(255, 77, 255) calc(100% - 18px)'}\"\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'lib-ngx-ttitan-color-picker',\n  template: `<div\r\n  class=\"ngx-ttitan-color-picker-wrapper\"\r\n>\r\n\r\n  <div class=\"picker-input-wrapper\">\r\n    <div\r\n      [ngStyle]=\"{backgroundColor: color}\"\r\n      class=\"debug-output\"\r\n      *ngIf=\"colorPickerService.debug\"\r\n    >\r\n      {{color}}\r\n    </div>\r\n    <div class=\"picker-input-label\">\r\n      <label [for]=\"uuid\" >{{title}}</label>\r\n    </div>\r\n    <div class=\"picker-input-holder\">\r\n      <div class=\"picker-color\" [ngStyle]=\"{background: currentColorAlpha}\">\r\n\r\n      </div>\r\n      <div class=\"picker-input\">\r\n        <input\r\n          libNgxTTitanColorPickerInput\r\n          #pickerInput=\"libNgxTTitanColorPickerInput\"\r\n          (inputChange)=\"inputColorChange($event)\"\r\n          [format]=\"inputFormat\"\r\n          [id]=\"uuid\"\r\n          type=\"text\"\r\n          (focus)=\"openPicker()\"\r\n        />\r\n      </div>\r\n      <!--<div class=\"picker-save-sign\">-->\r\n      <!--S-->\r\n      <!--</div>-->\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"ngx-ttitan-color-picker\" [ngClass]=\"{'no-alpha': !alpha, 'open': pickerOpen}\">\r\n    <div class=\"ngx-ttitan-color-picker__MainColor\">\r\n      <div class=\"ngx-ttitan-color-picker__ColorLayer\" [ngStyle]=\"{backgroundColor: currentColorMax}\" ></div>\r\n      <div class=\"ngx-ttitan-color-picker__Slidable\" libNgxTTitanColorPickerSelector #mainColor=\"libNgxTTitanColorPickerSelector\" (change)=\"colorPickerService.saturationChange($event, this)\">\r\n        <div class=\"ngx-ttitan-color-picker__Dragger\" libNgxTTitanColorPickerDragger style=\"transform: translate3d(0px, 0px, 0px);\"></div>\r\n      </div>\r\n    </div>\r\n    <div class=\"ngx-ttitan-color-picker__HuePicker\">\r\n      <div class=\"ngx-ttitan-color-picker__Slidable\" libNgxTTitanColorPickerSelector #huePicker=\"libNgxTTitanColorPickerSelector\" (change)=\"colorPickerService.hueChange($event, this)\" [direction]=\"'vertical'\">\r\n        <div class=\"ngx-ttitan-color-picker__Dragger\" libNgxTTitanColorPickerDragger [pickerPad]=\"0\" style=\" transform: translate3d(0px, 0px, 0px);\"></div>\r\n      </div>\r\n    </div>\r\n    <div class=\"ngx-ttitan-color-picker__AlphaPicker\" *ngIf=\"alpha === true\">\r\n      <div class=\"ngx-ttitan-color-picker__ColorLayer\"\r\n\r\n           [ngStyle]=\"{background: 'linear-gradient(to top, ' + currentColorAlphaZero + '  18px, ' + currentColor + ' calc(100% - 18px)'}\"\r\n      ></div>\r\n      <div class=\"ngx-ttitan-color-picker__Slidable\" libNgxTTitanColorPickerSelector #alphaPicker=\"libNgxTTitanColorPickerSelector\" (change)=\"colorPickerService.alphaChange($event, this)\" [direction]=\"'vertical'\">\r\n        <div class=\"ngx-ttitan-color-picker__Dragger\" libNgxTTitanColorPickerDragger [pickerPad]=\"0\" style=\" transform: translate3d(0px, 0px, 0px);\"></div>\r\n      </div>\r\n    </div>\r\n    <!--<div style=\"height: 40px; width: 40px\" [ngStyle]=\"{background: currentColor}\">-->\r\n\r\n    <!--</div>-->\r\n    <!--<div style=\"height: 40px; width: 40px\" [ngStyle]=\"{background: currentColorAlpha}\">-->\r\n\r\n    <!--</div>-->\r\n  </div>\r\n  <lib-ngx-ttitan-color-picker-palette-list\r\n    (change)=\"inputColorChange($event)\"\r\n    [pallets]=\"pickerPallets\"\r\n  >\r\n\r\n  </lib-ngx-ttitan-color-picker-palette-list>\r\n</div>\r\n\r\n`,\n  styles: [`:host *,:host :after,:host :before{box-sizing:border-box}:host .debug-output{width:100%;height:20px}:host .picker-input-wrapper{margin-bottom:6px}:host .picker-input-wrapper .picker-input-label{margin-bottom:6px}:host .picker-input-wrapper .picker-input-label label{text-transform:uppercase;font-weight:600}:host .picker-input-wrapper .picker-input-holder{display:flex;height:33px;border:1px solid #bbb;overflow:hidden;border-radius:3px;background-color:#eee}:host .picker-input-wrapper .picker-input-holder .picker-color{flex:0 0 31px;background-color:#ff0300}:host .picker-input-wrapper .picker-input-holder .picker-input{flex:auto;background-color:transparent}:host .picker-input-wrapper .picker-input-holder .picker-input input{background-color:transparent;color:#272727;font-family:monospace;font-size:14px;border:none;outline:0;padding:8px 2px 8px 8px;width:100%}:host .picker-input-wrapper .picker-input-holder .picker-save-sign{flex:0 0 31px;line-height:33px;text-align:center}:host .ngx-ttitan-color-picker{max-height:0;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:flex;transition:max-height .3s}:host .ngx-ttitan-color-picker.open{margin-bottom:5px;max-height:165px}:host .ngx-ttitan-color-picker__ColorLayer{position:absolute;z-index:10;top:0;left:0;height:100%;width:100%;box-shadow:inset 0 0 2px 0 rgba(0,0,0,.5);pointer-events:none}:host .ngx-ttitan-color-picker__Slidable{height:100%;width:100%;cursor:pointer}:host .ngx-ttitan-color-picker__Dragger{position:relative;z-index:30;bottom:.9rem;-webkit-transform:none;transform:none;height:18px;width:18px;margin:0 auto;-webkit-backface-visibility:hidden;backface-visibility:hidden;will-change:transform;background:0 0;border:3px solid #fff;box-shadow:0 0 0 1px rgba(6,44,82,.1),0 2px 16px rgba(33,43,54,.08),inset 0 0 0 1px rgba(6,44,82,.1),0 2px 16px rgba(33,43,54,.08);border-radius:50%;pointer-events:none;touch-action:none}:host .ngx-ttitan-color-picker__MainColor{background-image:linear-gradient(45deg,#dfe3e8 25%,transparent 0),linear-gradient(-45deg,#dfe3e8 25%,transparent 0),linear-gradient(45deg,transparent 75%,#dfe3e8 0),linear-gradient(-45deg,transparent 75%,#dfe3e8 0);background-size:1.6rem 1.6rem;background-position:0 0,0 .8rem,.8rem -.8rem,-.8rem 0;position:relative;overflow:hidden;width:165px;height:165px;border-radius:4px;cursor:pointer}:host .ngx-ttitan-color-picker__MainColor .ngx-ttitan-color-picker__ColorLayer{box-shadow:inset 0 0 0 1px rgba(6,44,82,.1),0 2px 16px rgba(33,43,54,.08);border-radius:4px}:host .ngx-ttitan-color-picker__MainColor .ngx-ttitan-color-picker__Dragger{right:.9rem;margin:0}:host .ngx-ttitan-color-picker__MainColor:after,:host .ngx-ttitan-color-picker__MainColor:before{content:\"\";position:absolute;z-index:20;top:0;left:0;display:block;height:100%;width:100%;pointer-events:none;border-radius:3px}:host .ngx-ttitan-color-picker__MainColor:before{background:linear-gradient(90deg,#fff,transparent)}:host .ngx-ttitan-color-picker__MainColor:after{background-image:linear-gradient(0deg,#000,transparent);box-shadow:inset 0 0 0 1px rgba(6,44,82,.1),0 2px 16px rgba(33,43,54,.08)}:host .ngx-ttitan-color-picker__AlphaPicker,:host .ngx-ttitan-color-picker__HuePicker{position:relative;overflow:hidden;height:165px;width:24px;margin-left:.8rem;border-width:3px;border-radius:8rem;padding:13px 0}:host .ngx-ttitan-color-picker__HuePicker{background:linear-gradient(to bottom,red 0,#ff0 21%,#0f0 33%,#0ff 50%,#00f 67%,#f0f 83%,red 100%);box-shadow:inset 0 0 2px 0 rgba(0,0,0,.5)}:host .ngx-ttitan-color-picker__AlphaPicker{background-image:linear-gradient(45deg,#dfe3e8 25%,transparent 0),linear-gradient(-45deg,#dfe3e8 25%,transparent 0),linear-gradient(45deg,transparent 75%,#dfe3e8 0),linear-gradient(-45deg,transparent 75%,#dfe3e8 0);background-size:1.6rem 1.6rem;background-position:0 0,0 .8rem,.8rem -.8rem,-.8rem 0}:host .ngx-ttitan-color-picker__AlphaPicker .ngx-ttitan-color-picker__ColorLayer{border-radius:8rem}:host .ngx-ttitan-color-picker.no-alpha .ngx-ttitan-color-picker__MainColor{width:200px}`],\n})\nexport class NgxTTitanColorPickerComponent implements OnInit, AfterViewInit {\n\n  @HostListener('click', ['$event']) componentClick($event) {\n    if(!this.pickerOpen) {\n      return;\n    }\n    if(typeof $event.path !== \"undefined\") {\n      let pickerFound = false;\n      $event.path.every(function(item) {\n        if(\n          typeof item.classList !== \"undefined\"\n        ) {\n          if(\n            item.classList.contains('picker-input-holder') ||\n            item.classList.contains('ngx-ttitan-color-picker')\n          ) {\n            pickerFound = true;\n            return false;\n          }\n        }\n\n        return true;\n      });\n\n      if(!pickerFound) {\n        this.closePicker();\n      }\n\n    }\n  }\n\n  @Input('alpha') public alpha: boolean = false;\n  @Input('debug') public debug: boolean = false;\n  @Input('color') public color: string = 'rgba(255,255,255,0)';\n  @Input('title') public title: string = 'title';\n  @Input('outFormat') public outFormat: string = 'hex6';\n  @Input('inputFormat') public inputFormat: string = 'hex6';\n  @Input('availPallets') public availPallets: Array<string> = ['polaris', 'material'];\n  @Input('customPallets') public customPallets:  Array<Palette> = [];\n  @Output('colorChanged') public colorChanged: EventEmitter<string> = new EventEmitter<string>();\n\n  @ViewChild('pickerInput') public pickerInput: NgxTTitanColorPickerInputDirective;\n\n  @ViewChild(NgxTTitanColorPickerPaletteListComponent) public paletteList: NgxTTitanColorPickerPaletteListComponent;\n\n  @ViewChild('mainColor') public mainColor: NgxTTitanColorPickerSelectorDirective = null;\n  @ViewChild('huePicker') public huePicker: NgxTTitanColorPickerSelectorDirective;\n  @ViewChild('alphaPicker') public alphaPicker: NgxTTitanColorPickerSelectorDirective;\n\n  public colorInit: boolean = false;\n  public pickerOpen: boolean = false;\n\n  public pickerPallets: Array<Palette> = [];\n\n  public hsva: HSVA = {\n    hue: 0,\n    saturation: 100,\n    value: 100,\n    alpha: 1\n  };\n\n  public currentColor: string = 'rgb(255,0,0)';\n  public currentColorMax: string = 'rgba(255,0,0,1)';\n  public currentColorAlpha: string = 'rgba(255,0,0,1)';\n  public currentColorAlphaZero: string = 'rgba(255,0,0,0)';\n\n  public uuid: string = 'picker-';\n\n  public allowedFormats: Array<string> = ['hex6', 'hex8', 'rgb', 'rgba'];\n\n  constructor(\n    public colorPickerService: NgxTTitanColorPickerService,\n    public cdr: ChangeDetectorRef\n  ) {\n    this.uuid = this.colorPickerService.getPickerUuid();\n\n  }\n\n  ngOnInit() {\n    this.colorPickerService.debug = this.debug;\n    this.validateInputParams();\n    this.colorPickerService.preparePickerPallets(this.availPallets, this.customPallets, this);\n    this.colorPickerService.colorToData(this.color, this);\n    this.cdr.detectChanges();\n  }\n\n\n  ngAfterViewInit() {\n    this.setDraggesToCurrentColor();\n  }\n\n  openPicker() {\n    this.pickerOpen = true;\n    if(typeof this.paletteList !== 'undefined') {\n      this.paletteList.closePalette();\n    }\n  }\n\n  closePicker() {\n    this.pickerOpen = false;\n  }\n\n  validateInputParams() {\n    if(this.allowedFormats.indexOf(this.outFormat) === -1) {\n      this.outFormat = 'hex6';\n      console.group(\"ngx-ttitan-color-picker\");\n      console.warn('[outFormat] must be one of this (' + this.allowedFormats.join(',') + ')');\n      console.groupEnd();\n    }\n    if(this.allowedFormats.indexOf(this.inputFormat) === -1) {\n      this.inputFormat = this.outFormat + '';\n      console.group(\"ngx-ttitan-color-picker\");\n      console.warn('[inputFormat] must be one of this (' + this.allowedFormats.join(',') + ')');\n      console.groupEnd();\n    }\n  }\n\n\n  inputColorChange(color: string) {\n    this.color = color;\n    this.colorPickerService.colorToData(this.color, this);\n    this.setDraggesToCurrentColor();\n  }\n\n  updateReturnColor() {\n    this.color = this.colorPickerService.prepareReturnColor(this.hsva, this.outFormat);\n\n    if(this.colorInit) {\n      this.colorChanged.emit(this.color + '');\n    }\n    this.colorInit = true;\n  }\n\n\n  setInputValue() {\n    if(typeof this.pickerInput !== 'undefined') {\n      this.pickerInput.setInputValue(\n        this.colorPickerService.prepareReturnColor(this.hsva, this.inputFormat)\n      );\n    }\n  }\n\n  setDraggesToCurrentColor() {\n\n    if(this.mainColor !== null) {\n      this.mainColor.setDragger(\n        {\n          x: this.hsva.saturation,\n          y: 100 - this.hsva.value\n        }\n      );\n    }\n\n    if(typeof this.huePicker !== 'undefined') {\n      this.huePicker.setDragger({x: 0, y: Math.round(this.hsva.hue * 100 / 360)});\n    }\n\n    if(typeof this.alphaPicker !== 'undefined' && this.alpha) {\n      this.alphaPicker.setDragger({x: 0, y: 100 - (this.hsva.alpha * 100)});\n    }\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxTTitanColorPickerComponent } from './ngx-ttitan-color-picker.component';\nimport { NgxTTitanColorPickerSelectorDirective } from './ngx-ttitan-color-picker-selector.directive';\nimport { NgxTTitanColorPickerDraggerDirective } from './ngx-ttitan-color-picker-dragger.directive';\nimport {CommonModule} from \"@angular/common\";\nimport { NgxTTitanColorPickerInputDirective } from './ngx-ttitan-color-picker-input.directive';\nimport { NgxTTitanColorPickerPaletteListComponent } from './ngx-ttitan-color-picker-palette-list/ngx-ttitan-color-picker-palette-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NgxTTitanColorPickerComponent,\n    NgxTTitanColorPickerSelectorDirective,\n    NgxTTitanColorPickerDraggerDirective,\n    NgxTTitanColorPickerInputDirective,\n    NgxTTitanColorPickerPaletteListComponent,\n  ],\n  exports: [NgxTTitanColorPickerComponent]\n})\nexport class NgxTTitanColorPickerModule { }\n"],"names":[],"mappings":"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,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBACxJ,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBACxJ,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBACxJ,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBACxJ,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBACxJ,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBACxJ,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBACxJ,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBACxJ,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBACxJ,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBACxJ,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBACxJ,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBACxJ,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBACxJ,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBACxJ,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBACxJ,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBACxJ,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBAC5G,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;gBAC5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"}
